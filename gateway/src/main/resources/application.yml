server:
  port: ${port}
spring:
  main:
    web-application-type: reactive # 设为响应式应用
  application:
    name: gateway-service
  profiles:
    active: dev
  config:
    import: "consul:"  # 启用 Consul 配置导入
#########################################gateway################################################################
  cloud:
    gateway:
#      globalcors:
#        cors-configurations:
#          '[/**]':
#            allowCredentials: true
#            allowedOriginPatterns: "*"
#            allowedOrigins: "*"
#            allowedHeaders: "*"
#            allowedMethods: "*"
#        default-filters:
#          - DedupeResponseHeader=Vary Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST
#        # 解决options请求被拦截的问题
#        add-to-simple-url-handler-mapping: true
      routes:
        - id: system-service
          uri: lb://system-service  # 服务名，配合服务发现使用
          predicates:
            - Path=/users/**
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/orders/**
        - id: security-service
          uri: lb://security-service
          predicates:
            - Path=/security/**
    discovery:
      tags: gateway,api-gateway
      locator:
        enabled: true  # 启用服务发现路由
        lower-case-service-id: true  # 服务名小写
#########################################consul################################################################
    consul:
      host: localhost      # Consul服务器地址
      port: 8500           # Consul服务器端口
      discovery:
        service-name: ${spring.application.name}  # 注册到Consul的服务名
        enabled: true                             # 启用服务发现
        prefer-ip-address: true                   # 使用IP地址注册
        health-check-path: /actuator/health       # 健康检查路径
        health-check-interval: 10s                # 健康检查间隔
        heartbeat:
          ttl: 30s
          enabled: true
        deregister: true
  datasource:
    url: jdbc:mysql://${database.master.ip}:${database.master.port}/${database.master.base}?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    username: ${database.master.username}
    password: ${database.master.password}
#########################################redis################################################################
  redis:
    host: 127.0.0.1       # Redis 服务器地址
    port: 6379                # Redis 服务器连接端口
    password: 123456          # Redis 密码（无密码时建议删除此配置）
    database: 0               # Redis 数据库索引（默认为 0）
    timeout: 1800000          # 连接超时时间（毫秒）
    jedis:
      pool:
        max-active: 20        # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1          # 最大阻塞等待时间（负数表示没限制）
        max-idle: 5           # 连接池中的最大空闲连接
        min-idle: 0           # 连接池中的最小空闲连接

#########################################logback################################################################
logging:
  level:
#    org.springframework.cloud.gateway: TRACE
    org.springframework.cloud.gateway: debug
#########################################resilience4j################################################################
resilience4j:
  circuitbreaker:
    instances:
      gateway-service:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000ms
        permittedNumberOfCallsInHalfOpenState: 2
        slidingWindowType: COUNT_BASED
        automaticTransitionFromOpenToHalfOpenEnabled: true

  retry:
    instances:
      gateway-service:
        maxAttempts: 3
        waitDuration: 500ms

  ratelimiter:
    instances:
      gateway-service:
        limitForPeriod: 10
        limitRefreshPeriod: 1s
        timeoutDuration: 0

  bulkhead:
    instances:
      gateway-service:
        maxConcurrentCalls: 5
        maxWaitDuration: 0

